<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xmlns:p="http://www.springframework.org/schema/p" 
		xmlns:context="http://www.springframework.org/schema/context" 
		xmlns:mvc="http://www.springframework.org/schema/mvc"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xmlns:websocket="http://www.springframework.org/schema/websocket"
        xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-4.3.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx.xsd
           http://www.springframework.org/schema/websocket
   		   http://www.springframework.org/schema/websocket/spring-websocket.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd
           ">
    <!-- 激活利用注解进行装配 -->
	<mvc:annotation-driven />
    <!-- ① ：对 web 包中的所有类进行扫描，以完成 Bean 创建和自动依赖注入的功能 -->
    <context:component-scan base-package="com.ly" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>
	<websocket:message-broker application-destination-prefix="/app">
		<websocket:stomp-endpoint path="/lyadmingsocket">
			<websocket:handshake-interceptors> 
				<bean class="com.ly.common.HandshakeInterceptor"></bean>
			</websocket:handshake-interceptors>
			<websocket:sockjs >
			</websocket:sockjs>
		</websocket:stomp-endpoint>
		<websocket:simple-broker prefix="/topic,/queue"/>
	</websocket:message-broker>

    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    
    <mvc:resources mapping="/theme/**" location="/theme/" />
    <mvc:view-controller path="/" view-name="redirect:/sys/index"/>

    <!-- ② ：启动 Spring MVC 的注解功能，完成请求和注解 POJO 的映射 -->
    <!--  ③ ：对模型视图名称的解析，即在模型视图名称添加前后缀 -->
    <!-- InternalResourceViewResolver默认的就是JstlView所以这里就不用配置viewClass了 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />
    </bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>