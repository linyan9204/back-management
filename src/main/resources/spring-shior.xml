<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">



	<!-- 缓存管理器 使用Ehcache实现 -->
	<!-- 用户授权信息Cache, 采用EhCache -->
	<bean id="cacheManager" class="org.crazycake.shiro.RedisCacheManager">
		<property name="keyPrefix" value="users:security:authz:" />
		<property name="redisManager" ref="redisManager" />
	</bean>

	<bean id="redisManager" class="org.crazycake.shiro.RedisManager">
		<property name="host" value="127.0.0.1" />
		<property name="port" value="6379" />
		<property name="password" value="redis123" />
	</bean>

	<!-- 凭证匹配器 -->
	<!-- <bean id="credentialsMatcher" class="com.github.zhangkaitao.shiro.chapter12.credentials.RetryLimitHashedCredentialsMatcher"> -->
	<!-- <constructor-arg ref="cacheManager"/> -->
	<!-- <property name="hashAlgorithmName" value="md5"/> -->
	<!-- <property name="hashIterations" value="2"/> -->
	<!-- <property name="storedCredentialsHexEncoded" value="true"/> -->
	<!-- </bean> -->
	<bean id="shiorUserService" class="com.ly.service.shior.impl.ShiorUserServiceImpl" />
	<!-- Realm实现 -->
	<bean id="userRealm" class="com.ly.common.DefaultWebServiceRealm">
		<property name="redisManager" ref="redisManager" />
		<property name="shiorUserService" ref="shiorUserService" />
	</bean>
	<!-- 会话ID生成器 -->
	<bean id="sessionIdGenerator"
		class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />
	<!-- 会话DAO -->
	<bean id="sessionDAO" class="org.crazycake.shiro.RedisSessionDAO">
		<property name="redisManager" ref="redisManager" />
		<property name="keyPrefix" value="users:security:sessions:" />
	</bean>
	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="sid" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="180000" />
	</bean>
	<!-- 会话验证调度器 -->
	<!-- <bean id="sessionValidationScheduler" -->
	<!-- class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler"> -->
	<!-- <property name="sessionValidationInterval" value="1800000"/> -->
	<!-- <property name="sessionManager" ref="sessionManager"/> -->
	<!-- </bean> -->
	<!-- 会话管理器 -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="globalSessionTimeout" value="1800000" />
		<property name="deleteInvalidSessions" value="true" />
		<!-- <property name="sessionValidationSchedulerEnabled" value="true"/> -->
		<!-- <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/> -->
		<property name="sessionDAO" ref="sessionDAO" />
		<property name="sessionIdCookieEnabled" value="true" />
		<property name="sessionIdCookie" ref="sessionIdCookie" />
	</bean>
	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realms">
			<list>
				<ref bean="userRealm" />
			</list>
		</property>
		<property name="sessionManager" ref="sessionManager" />
		<property name="cacheManager" ref="cacheManager" />
	</bean>
	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>
	<!-- Shiro生命周期处理器 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- Shiro的Web过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/index.jsp" />
		<property name="unauthorizedUrl" value="/unauthorized" />
		<!-- <property name="filters"> -->
		<!-- <util:map> -->
		<!-- <entry key="authc" value-ref="formAuthenticationFilter"/> -->
		<!-- </util:map> -->
		<!-- </property> -->
		<property name="filterChainDefinitions">
			<value>
				/index.jsp = anon
				/login = anon
				/sys/** = anon
				/lyadmingsocket/** = anon
				/lyadmingsocket = anon
				/** = anon
				/main = authc
				/logout = logout
				/unauthorized = anon
				/unauthenticated = anon
<!-- 				/** = authc -->
			</value>
		</property>
	</bean>
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"></bean>
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager"></property>
	</bean>

	<!-- SHIRO 注解模式下登录失败，其它权限异常捕获 -->
	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- 可以处理用户登录失败或者未登录跳转 -->
				<prop key="org.apache.shiro.authz.UnauthenticatedException">/unauthenticated</prop>
				<!-- 处理没有权限访问跳转页面 -->
				<prop key="org.apache.shiro.authz.AuthorizationException">/unauthorized</prop>
			</props>
		</property>
	</bean>

</beans> 

